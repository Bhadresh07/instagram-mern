[{"/home/ubuntu/begin/server/client/src/index.js":"1","/home/ubuntu/begin/server/client/src/components/screen/signup.js":"2","/home/ubuntu/begin/server/client/src/components/screen/userProfile.js":"3","/home/ubuntu/begin/server/client/src/components/screen/home.js":"4","/home/ubuntu/begin/server/client/src/reportWebVitals.js":"5","/home/ubuntu/begin/server/client/src/components/screen/CreatePost.js":"6","/home/ubuntu/begin/server/client/src/components/screen/profile.js":"7","/home/ubuntu/begin/server/client/src/App.js":"8","/home/ubuntu/begin/server/client/src/components/screen/signin.js":"9","/home/ubuntu/begin/server/client/src/components/navbar.js":"10","/home/ubuntu/begin/server/client/src/reducer/userReducer.js":"11","/home/ubuntu/begin/server/client/src/components/screen/FollowerPost.js":"12","/home/ubuntu/begin/server/client/src/components/screen/EditProfile.js":"13"},{"size":500,"mtime":1606936427564,"results":"14","hashOfConfig":"15"},{"size":3534,"mtime":1610556108500,"results":"16","hashOfConfig":"15"},{"size":4497,"mtime":1610471010793,"results":"17","hashOfConfig":"15"},{"size":5133,"mtime":1610472488451,"results":"18","hashOfConfig":"15"},{"size":362,"mtime":1606936427564,"results":"19","hashOfConfig":"15"},{"size":2713,"mtime":1609953853701,"results":"20","hashOfConfig":"15"},{"size":2114,"mtime":1610474996475,"results":"21","hashOfConfig":"15"},{"size":1962,"mtime":1610475105329,"results":"22","hashOfConfig":"15"},{"size":2287,"mtime":1610303456698,"results":"23","hashOfConfig":"15"},{"size":3300,"mtime":1610381535818,"results":"24","hashOfConfig":"15"},{"size":606,"mtime":1610553799430,"results":"25","hashOfConfig":"15"},{"size":5072,"mtime":1609951990287,"results":"26","hashOfConfig":"15"},{"size":3675,"mtime":1610556268601,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1e1zmgy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ubuntu/begin/server/client/src/index.js",[],["63","64"],"/home/ubuntu/begin/server/client/src/components/screen/signup.js",["65"],"/home/ubuntu/begin/server/client/src/components/screen/userProfile.js",["66"],"/home/ubuntu/begin/server/client/src/components/screen/home.js",["67"],"import React,{useContext,useState,useEffect} from 'react'\nimport { UserContext } from '../../App'\nimport {Link} from 'react-router-dom'\n\nconst Home = ()=>{\n    const {state,dispatch} = useContext(UserContext)\n    const [data,setData] = useState([])\n    \n    useEffect(()=>{\n     fetch(\"/allposts\",{\n         method:\"get\",\n         headers:{\n             \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n         }\n     })\n     .then(res=>res.json())\n     .then(result=>{\n         console.log(result)\n         setData(result.posts)\n     })\n     .catch(err=>{\n         console.log(err)\n     })\n    },[])\n\n    const likePost=(id)=>{\n        fetch('/likes',{\n            method:\"put\",\n            headers:{\n              \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n              \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n             const newData = data.map(item=>{\n                 if(item._id===result._id)\n                 {\n                    return result \n                 }\n                 else\n                 {\n                    return item \n                 }\n             })\n             setData(newData)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n    const unlikePost=(id)=>{\n        fetch('/unlikes',{\n            method:\"put\",\n            headers:{\n              \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n              \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n             const newData = data.map(item=>{\n                 if(item._id===result._id)\n                 {\n                    return result \n                 }\n                 else\n                 {\n                    return item \n                 }\n             })\n             setData(newData)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const postComment=(text,postId)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData=data.map(item=>{\n                if(item._id===result._id)\n                {\n                   return result \n                }\n                else\n                {\n                   return item \n                }\n            })\n            setData(newData) \n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const deletePost=(id)=>{\n        fetch(`/deletepost/${id}`,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData = data.filter(item=>{\n                 return item._id!==result._id\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    \n    return (\n        <div className=\"home\">\n                {data.map(item=>(\n                <div className=\"card home-card\" key={item._id}>\n                  <h5><Link to={state._id===item.postedBy._id?'/profile':`/profile/${item.postedBy._id}`}><img src={item.postedBy.pic} alt={item.postedBy.name} className=\"circle\" style={{height: '24px',position: 'inherit'}}/>{item.postedBy.name}</Link>{state._id===item.postedBy._id&&\n                  <i className=\"material-icons\" style={{color:\"red\",float:\"right\"}}onClick={()=>{deletePost(item._id)}}>delete</i>}</h5>\n                    <div className=\"card-image\">\n                        <img src={item.photo} alt={item.title}/>\n                    </div>\n                    <div className=\"card-content\">\n                    {item.likes.includes(state._id)?\n                    <i className=\"material-icons\" style={{color:\"red\"}} onClick={()=>{unlikePost(item._id)}}>favorite</i>\n                    :<i className=\"material-icons\" style={{color:\"grey\"}} onClick={()=>{likePost(item._id)}}>favorite_border</i>}\n                        <h6>{item.likes.length} likes</h6>    \n                        <span><h6>{item.postedBy.name}</h6><p>{item.body}</p></span>\n                        {\n                          item.comments.map(record=>{\n                              return <h6><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                          })  \n                        }\n                        <form onSubmit={(e)=>{postComment(e.target[0].value,item._id)}}>\n                          <input type=\"text\" placeholder=\"add a comment\"/>\n                        </form>\n                    </div>\n                </div>\n                ))\n                }\n        </div>\n    )\n}\n\nexport default Home",["68","69"],"/home/ubuntu/begin/server/client/src/reportWebVitals.js",[],["70","71"],"/home/ubuntu/begin/server/client/src/components/screen/CreatePost.js",[],"/home/ubuntu/begin/server/client/src/components/screen/profile.js",["72"],"/home/ubuntu/begin/server/client/src/App.js",["73"],"import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport './App.css';\nimport Navbar from './components/navbar'\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Home from './components/screen/home'\nimport Profile from './components/screen/profile'\nimport Signin from './components/screen/signin'\nimport Signup from './components/screen/signup'\nimport CreatePost from './components/screen/CreatePost'\nimport UserProfile from './components/screen/userProfile'\nimport FollowerPost from './components/screen/FollowerPost'\nimport EditProfile from './components/screen/EditProfile'\n\nimport { reducer,initialState } from './reducer/userReducer'\n\nexport const UserContext = createContext()\n\nconst Routing=()=>{\n  const history = useHistory()\n  const {state,dispatch}=useContext(UserContext)\n  useEffect(()=>{\n   const user = JSON.parse(localStorage.getItem(\"user\"))\n   if(user)\n   {\n     dispatch({type:\"USER\",payload:user})\n     history.push('/')\n   }\n   else\n   {\n     history.push('/signin')\n   }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n       <Home/>\n      </Route>\n      <Route exact path=\"/profile\">\n       <Profile/>\n      </Route>\n      <Route path=\"/signin\">\n       <Signin/>\n      </Route>\n      <Route path=\"/signup\">\n       <Signup/>\n      </Route>\n      <Route path=\"/createpost\">\n       <CreatePost/>\n      </Route>\n      <Route path=\"/profile/:id\">\n       <UserProfile/>\n      </Route>\n      <Route path=\"/followerposts\">\n       <FollowerPost/>\n      </Route>\n      <Route path=\"/editprofile\">\n        <EditProfile/>\n      </Route>\n    </Switch>\n  )\n}\nfunction App() {\n  const [state, dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n     <BrowserRouter>\n     <Navbar/>\n     <Routing/>\n     </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n",["74","75"],"/home/ubuntu/begin/server/client/src/components/screen/signin.js",["76"],"import React,{useState,useContext} from 'react'\nimport {Link,useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\nimport { UserContext } from '../../App'\nconst Signin = ()=>{\n    const history = useHistory()\n    const [password,setPassword] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const {state,dispatch} = useContext(UserContext)\n    const PostData=()=>{\n     if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email))\n     {\n       M.toast({html:\"invalid email\",classes:\"#ff8a80 red accent-1\"})  \n      return \n     }\n        fetch(\"/signin\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                password,\n                email\n            })\n        }).then(res=>res.json())\n            .then(data=>{\n                console.log(data)\n                if(data.error){\n                    M.toast({html:data.error,classes:\"#ff8a80 red accent-1\"})\n                }\n                else{\n                    localStorage.setItem(\"jwt\",data.token)\n                    localStorage.setItem(\"user\",JSON.stringify(data.user))\n                    dispatch({type:\"USER\",payload:data.user})\n                    M.toast({html:\"signedin successfully\",classes:\"#81c784 green lighten-2\"})\n                    history.push('/')\n                }\n                console.log(data)\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n    return (\n        <div className=\"mycard\">\n        <div className=\"card auth-card\">\n          <h2>Instagram</h2>\n          <input\n           type=\"text\"\n           placeholder=\"email\"\n           value={email}\n           onChange={(e)=>setEmail(e.target.value)}\n           />\n           <input\n           type=\"password\"\n           placeholder=\"password\"\n           value={password}\n           onChange={(e)=>setPassword(e.target.value)}\n           />\n           <button className=\"btn waves-effect blue lighten-1\" style={{color:'black'}} onClick={()=>PostData()}>\n               Signin\n           </button> \n           <h5>\n               <Link to=\"/signup\">Don't have an account</Link>\n           </h5> \n        </div>\n        </div>\n    )\n}\n\nexport default Signin","/home/ubuntu/begin/server/client/src/components/navbar.js",[],["77","78"],"/home/ubuntu/begin/server/client/src/reducer/userReducer.js",[],"/home/ubuntu/begin/server/client/src/components/screen/FollowerPost.js",["79","80"],"import React,{useContext,useState,useEffect} from 'react'\nimport { UserContext } from '../../App'\nimport {Link} from 'react-router-dom'\n\nconst FollowerPost = ()=>{\n    const {state,dispatch} = useContext(UserContext)\n    const [data,setData] = useState([])\n    \n    useEffect(()=>{\n     fetch(\"/followerposts\",{\n         method:\"get\",\n         headers:{\n             \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n         }\n     })\n     .then(res=>res.json())\n     .then(result=>{\n         console.log(result)\n         setData(result.posts)\n     })\n     .catch(err=>{\n         console.log(err)\n     })\n    },[])\n\n    const likePost=(id)=>{\n        fetch('/likes',{\n            method:\"put\",\n            headers:{\n              \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n              \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n             const newData = data.map(item=>{\n                 if(item._id===result._id)\n                 {\n                    return result \n                 }\n                 else\n                 {\n                    return item \n                 }\n             })\n             setData(newData)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n    const unlikePost=(id)=>{\n        fetch('/unlikes',{\n            method:\"put\",\n            headers:{\n              \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n              \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n             const newData = data.map(item=>{\n                 if(item._id===result._id)\n                 {\n                    return result \n                 }\n                 else\n                 {\n                    return item \n                 }\n             })\n             setData(newData)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const postComment=(text,postId)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData=data.map(item=>{\n                if(item._id===result._id)\n                {\n                   return result \n                }\n                else\n                {\n                   return item \n                }\n            })\n            setData(newData) \n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const deletePost=(id)=>{\n        fetch(`/deletepost/${id}`,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData = data.filter(item=>{\n                 return item._id!==result._id\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    \n    return (\n        <div className=\"home\">\n                {data.map(item=>(\n                <div className=\"card home-card\" key={item._id}>\n                  <h5><Link to={state._id===item.postedBy._id?'/profile':`/profile/${item.postedBy._id}`}>{item.postedBy.name}</Link>{state._id===item.postedBy._id&&\n                  <i className=\"material-icons\" style={{color:\"red\",float:\"right\"}}onClick={()=>{deletePost(item._id)}}>delete</i>}</h5>\n                    <div className=\"card-image\">\n                        <img src={item.photo} alt=\"no photo\"/>\n                    </div>\n                    <div className=\"card-content\">\n                    <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                    {item.likes.includes(state._id)?\n                    <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\n                    :<i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>}\n                        <h6>{item.likes.length} likes</h6>    \n                        <h6>{item.title}</h6>\n                        <p>{item.body}</p>\n                        {\n                          item.comments.map(record=>{\n                              return <h6><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                          })  \n                        }\n                        <form onSubmit={(e)=>{postComment(e.target[0].value,item._id)}}>\n                          <input type=\"text\" placeholder=\"add a comment\"/>\n                        </form>\n                    </div>\n                </div>\n                ))\n                }\n        </div>\n    )\n}\n\nexport default FollowerPost","/home/ubuntu/begin/server/client/src/components/screen/EditProfile.js",["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":18,"column":7,"nodeType":"89","endLine":18,"endColumn":12,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":24,"column":7,"nodeType":"89","endLine":24,"endColumn":9,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":6,"column":18,"nodeType":"95","messageId":"96","endLine":6,"endColumn":26},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","replacedBy":"98"},{"ruleId":"83","replacedBy":"99"},{"ruleId":"85","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"94","line":7,"column":18,"nodeType":"95","messageId":"96","endLine":7,"endColumn":26},{"ruleId":"93","severity":1,"message":"101","line":20,"column":10,"nodeType":"95","messageId":"96","endLine":20,"endColumn":15},{"ruleId":"83","replacedBy":"102"},{"ruleId":"85","replacedBy":"103"},{"ruleId":"93","severity":1,"message":"101","line":9,"column":12,"nodeType":"95","messageId":"96","endLine":9,"endColumn":17},{"ruleId":"83","replacedBy":"104"},{"ruleId":"85","replacedBy":"105"},{"ruleId":"93","severity":1,"message":"94","line":6,"column":18,"nodeType":"95","messageId":"96","endLine":6,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":135,"column":25,"nodeType":"108","endLine":135,"endColumn":63},{"ruleId":"93","severity":1,"message":"109","line":1,"column":24,"nodeType":"95","messageId":"96","endLine":1,"endColumn":33},{"ruleId":"93","severity":1,"message":"110","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadPic'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["114"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["111"],["112"],["111"],["112"],"'state' is assigned a value but never used.",["111"],["112"],["111"],["112"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [uploadPic, url]",{"range":"119","text":"120"},"Update the dependencies array to be: [id]",{"range":"121","text":"122"},[483,488],"[uploadPic, url]",[690,692],"[id]"]