[{"/home/ubuntu/begin/server/client/src/components/screen/CreatePost.js":"1","/home/ubuntu/begin/server/client/src/components/screen/EditProfile.js":"2","/home/ubuntu/begin/server/client/src/reducer/userReducer.js":"3","/home/ubuntu/begin/server/client/src/index.js":"4","/home/ubuntu/begin/server/client/src/components/screen/signup.js":"5","/home/ubuntu/begin/server/client/src/components/screen/userProfile.js":"6","/home/ubuntu/begin/server/client/src/components/screen/home.js":"7","/home/ubuntu/begin/server/client/src/App.js":"8","/home/ubuntu/begin/server/client/src/components/screen/FollowerPost.js":"9","/home/ubuntu/begin/server/client/src/components/navbar.js":"10","/home/ubuntu/begin/server/client/src/components/screen/profile.js":"11","/home/ubuntu/begin/server/client/src/reportWebVitals.js":"12","/home/ubuntu/begin/server/client/src/components/screen/signin.js":"13"},{"size":2713,"mtime":1609953853701,"results":"14","hashOfConfig":"15"},{"size":3820,"mtime":1610888145545,"results":"16","hashOfConfig":"15"},{"size":606,"mtime":1610647707460,"results":"17","hashOfConfig":"15"},{"size":500,"mtime":1606936427564,"results":"18","hashOfConfig":"15"},{"size":3534,"mtime":1610556108500,"results":"19","hashOfConfig":"15"},{"size":4497,"mtime":1610471010793,"results":"20","hashOfConfig":"15"},{"size":5163,"mtime":1610910381703,"results":"21","hashOfConfig":"15"},{"size":1962,"mtime":1610475105329,"results":"22","hashOfConfig":"15"},{"size":5072,"mtime":1609951990287,"results":"23","hashOfConfig":"15"},{"size":3300,"mtime":1610381535818,"results":"24","hashOfConfig":"15"},{"size":2097,"mtime":1610887270939,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":1606936427564,"results":"26","hashOfConfig":"15"},{"size":2287,"mtime":1610303456698,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1e1zmgy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ubuntu/begin/server/client/src/components/screen/CreatePost.js",[],["60","61"],"/home/ubuntu/begin/server/client/src/components/screen/EditProfile.js",["62","63"],"/home/ubuntu/begin/server/client/src/reducer/userReducer.js",[],"/home/ubuntu/begin/server/client/src/index.js",[],"/home/ubuntu/begin/server/client/src/components/screen/signup.js",["64"],"import React,{useState,useEffect} from 'react'\nimport {Link,useHistory} from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst Signup = ()=>{\n    const history = useHistory()\n    const [name,setName] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(undefined)\n    \n    useEffect(()=>{\n      if(url)\n      {\n        uploadPic()  \n      }\n    },[url])\n\n    const uploadPic = ()=>{\n       const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"doehzrtdh\")\n        \n        fetch(\"https://api.cloudinary.com/v1_1/doehzrtdh/image/upload\",{\n            method:\"post\",\n            body:data\n        })\n        .then(res=>res.json())\n        .then(data=>{\n           setUrl(data.url)\n        })\n        .then(\n           uploadFields() \n        )\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n   \n    const uploadFields=()=>{\n       if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email))\n     {\n       M.toast({html:\"invalid email\",classes:\"#ff8a80 red accent-1\"})  \n       return \n     }\n        fetch(\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                password,\n                email,\n                pic:url\n            })\n        }).then(res=>res.json())\n            .then(data=>{\n                if(data.error){\n                    M.toast({html:data.error,classes:\"#ff8a80 red accent-1\"})\n                }\n                else{\n                    M.toast({html:data.message,classes:\"#81c784 green lighten-2\"})\n                    history.push('/signin')\n                }\n                console.log(data)\n        }).catch(error=>{\n            console.log(error)\n        })\n    } \n\n    const PostData=()=>{\n        if(image)\n        {\n          uploadPic()  \n        }\n        else\n        {\n          uploadFields()  \n        } \n    }\n\n    return (\n        <div className=\"mycard\">\n        <div className=\"card auth-card\">\n          <h2>Instagram</h2>\n          <input\n           type=\"text\"\n           placeholder=\"name\"\n           value={name}\n           onChange={(e)=>setName(e.target.value)}\n           />\n          <input\n           type=\"text\"\n           placeholder=\"email\"\n           value={email}\n           onChange={(e)=>setEmail(e.target.value)}\n           />\n           <input\n           type=\"password\"\n           placeholder=\"password\"\n           value={password}\n           onChange={(e)=>setPassword(e.target.value)}\n           />\n           <div className=\"file-field input-field\">\n            <div className=\"btn waves-effect blue lighten-1\" style={{color:'black'}}>\n                <span>Upload Image</span>\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n            </div>\n            <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\"/>\n            </div>\n            </div>\n           <button className=\"btn waves-effect blue lighten-1\" style={{color:'black'}} onClick={()=>PostData()}>\n               Sign Up\n           </button> \n           <h5>\n               <Link to=\"/signin\">Already have account</Link>\n           </h5>  \n        </div>\n        </div>\n    )\n}\n\nexport default Signup",["65","66"],"/home/ubuntu/begin/server/client/src/components/screen/userProfile.js",["67"],"import React,{useState,useEffect,useContext} from 'react'\nimport {UserContext} from '../../App'\nimport {useParams} from 'react-router-dom'\n\n\nconst UserProfile = ()=>{\n    const [profile,setProfile] = useState(null)\n    const {state,dispatch} = useContext(UserContext)\n    const {id} = useParams()\n    const [follow,setFollow] = useState((state&&state.following.includes(id)))\n    useEffect(()=>{\n      fetch(`/profile/${id}`,{\n          headers:{\n              \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n          }\n      })\n      .then(res=>res.json())\n      .then(result=>{ \n         setProfile(result)\n      })\n      .catch(err=>{\n          console.log(err)\n      })\n    },[])\n\n    const followuser=()=>{\n       fetch(\"/follow\",{\n           method:\"put\",\n           headers:{\n               \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n               \"Content-Type\": \"application/json\"\n           },\n           body:JSON.stringify({\n               followId:id\n           })\n       }).then(res=>res.json())\n       .then(result=>{\n           dispatch({type:\"UPDATE\",payload:{following:result.following,followers:result.followers}})\n           localStorage.setItem(\"user\",JSON.stringify(result))\n           setProfile((prevState)=>{\n               return {...prevState,\n               user:{\n                   ...prevState.user,\n                   followers:[...prevState.user.followers,result._id]\n               }\n            }\n           })\n           setFollow(true)\n       })\n    }\n    \n    const unfollowuser=()=>{\n       fetch(\"/unfollow\",{\n           method:\"put\",\n           headers:{\n               \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n               \"Content-Type\": \"application/json\"\n           },\n           body:JSON.stringify({\n               unfollowId:id\n           })\n       }).then(res=>res.json())\n       .then(result=>{\n           dispatch({type:\"UPDATE\",payload:{following:result.following,followers:result.followers}})\n           localStorage.setItem(\"user\",JSON.stringify(result))\n           setProfile((prevState)=>{\n               const newFollowers = prevState.user.followers.filter(item=>item!==result._id)\n               return {...prevState,\n               user:{\n                   ...prevState.user,\n                   followers:newFollowers\n               }\n            }\n           })\n           setFollow(false)\n       })\n    }\n\n    const fetchFollowers=()=>{\n       profile.user.followers.map(item=>(\n           console.log(item)\n       ))\n    }\n    \n    const fetchFollowing=()=>{\n       profile.user.following.map(item=>(\n           console.log(item)\n       ))\n    }\n\n    return (\n        <>\n        {profile&&\n        <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\n            <div style={{\n                display:\"flex\",\n                justifyContent:\"space-around\",\n                margin:\"18px 0px\",\n                borderBottom:\"1px solid grey\"\n            }}>\n                <div>\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}src={state&&state.pic} alt=\"im\">\n                    </img>\n                </div>\n                {profile!=null?\n                <div>\n                    <h4>{profile.user.name}</h4>\n                    <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\n                        <h6>{profile.post.length} post</h6>\n                        <h6 onClick={()=>fetchFollowers()}>{profile.user.followers.length} followers</h6>\n                        <h6 onClick={()=>fetchFollowing()}>{profile.user.following.length} following</h6>\n                    </div>\n                    {follow?\n                    <button className=\"btn waves-effect grey lighten-4\" style={{color:'black'}} onClick={()=>unfollowuser()}>\n                        Following\n                    </button>:\n                    <button className=\"btn waves-effect blue lighten-1\" style={{color:'black'}} onClick={()=>followuser()}>\n                        Follow\n                    </button>\n                    }  \n                </div>\n                :<h4>\"loading\"</h4>\n               }\n            </div>\n            <div className=\"gallery\">\n                {\n                    profile.post.map(item=>(\n                        <img className=\"item\" key={item._id} src={item.photo} alt={item.title}/>        \n                    ))  \n                }\n            </div>\n        </div>}\n        </>\n    )\n}\n\nexport default UserProfile",["68","69"],"/home/ubuntu/begin/server/client/src/components/screen/home.js",["70"],"/home/ubuntu/begin/server/client/src/App.js",["71"],"/home/ubuntu/begin/server/client/src/components/screen/FollowerPost.js",["72","73"],"import React,{useContext,useState,useEffect} from 'react'\nimport { UserContext } from '../../App'\nimport {Link} from 'react-router-dom'\n\nconst FollowerPost = ()=>{\n    const {state,dispatch} = useContext(UserContext)\n    const [data,setData] = useState([])\n    \n    useEffect(()=>{\n     fetch(\"/followerposts\",{\n         method:\"get\",\n         headers:{\n             \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n         }\n     })\n     .then(res=>res.json())\n     .then(result=>{\n         console.log(result)\n         setData(result.posts)\n     })\n     .catch(err=>{\n         console.log(err)\n     })\n    },[])\n\n    const likePost=(id)=>{\n        fetch('/likes',{\n            method:\"put\",\n            headers:{\n              \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n              \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n             const newData = data.map(item=>{\n                 if(item._id===result._id)\n                 {\n                    return result \n                 }\n                 else\n                 {\n                    return item \n                 }\n             })\n             setData(newData)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n    const unlikePost=(id)=>{\n        fetch('/unlikes',{\n            method:\"put\",\n            headers:{\n              \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n              \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n             const newData = data.map(item=>{\n                 if(item._id===result._id)\n                 {\n                    return result \n                 }\n                 else\n                 {\n                    return item \n                 }\n             })\n             setData(newData)\n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const postComment=(text,postId)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Authorization\":`Bearer ${localStorage.getItem(\"jwt\")}`,\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData=data.map(item=>{\n                if(item._id===result._id)\n                {\n                   return result \n                }\n                else\n                {\n                   return item \n                }\n            })\n            setData(newData) \n        }).catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const deletePost=(id)=>{\n        fetch(`/deletepost/${id}`,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData = data.filter(item=>{\n                 return item._id!==result._id\n            })\n            setData(newData)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    \n    return (\n        <div className=\"home\">\n                {data.map(item=>(\n                <div className=\"card home-card\" key={item._id}>\n                  <h5><Link to={state._id===item.postedBy._id?'/profile':`/profile/${item.postedBy._id}`}>{item.postedBy.name}</Link>{state._id===item.postedBy._id&&\n                  <i className=\"material-icons\" style={{color:\"red\",float:\"right\"}}onClick={()=>{deletePost(item._id)}}>delete</i>}</h5>\n                    <div className=\"card-image\">\n                        <img src={item.photo} alt=\"no photo\"/>\n                    </div>\n                    <div className=\"card-content\">\n                    <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                    {item.likes.includes(state._id)?\n                    <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\n                    :<i className=\"material-icons\" onClick={()=>{likePost(item._id)}}>thumb_up</i>}\n                        <h6>{item.likes.length} likes</h6>    \n                        <h6>{item.title}</h6>\n                        <p>{item.body}</p>\n                        {\n                          item.comments.map(record=>{\n                              return <h6><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\n                          })  \n                        }\n                        <form onSubmit={(e)=>{postComment(e.target[0].value,item._id)}}>\n                          <input type=\"text\" placeholder=\"add a comment\"/>\n                        </form>\n                    </div>\n                </div>\n                ))\n                }\n        </div>\n    )\n}\n\nexport default FollowerPost","/home/ubuntu/begin/server/client/src/components/navbar.js",[],"/home/ubuntu/begin/server/client/src/components/screen/profile.js",["74"],"/home/ubuntu/begin/server/client/src/reportWebVitals.js",[],"/home/ubuntu/begin/server/client/src/components/screen/signin.js",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":9,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":19,"column":7,"nodeType":"86","endLine":19,"endColumn":12,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":18,"column":7,"nodeType":"86","endLine":18,"endColumn":12,"suggestions":"89"},{"ruleId":"76","replacedBy":"90"},{"ruleId":"78","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"92","line":24,"column":7,"nodeType":"86","endLine":24,"endColumn":9,"suggestions":"93"},{"ruleId":"76","replacedBy":"94"},{"ruleId":"78","replacedBy":"95"},{"ruleId":"80","severity":1,"message":"96","line":6,"column":18,"nodeType":"82","messageId":"83","endLine":6,"endColumn":26},{"ruleId":"80","severity":1,"message":"97","line":20,"column":10,"nodeType":"82","messageId":"83","endLine":20,"endColumn":15},{"ruleId":"80","severity":1,"message":"96","line":6,"column":18,"nodeType":"82","messageId":"83","endLine":6,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":135,"column":25,"nodeType":"100","endLine":135,"endColumn":63},{"ruleId":"80","severity":1,"message":"96","line":7,"column":18,"nodeType":"82","messageId":"83","endLine":7,"endColumn":26},{"ruleId":"80","severity":1,"message":"97","line":9,"column":12,"nodeType":"82","messageId":"83","endLine":9,"endColumn":17},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'uploadPic'. Either include it or remove the dependency array.",["104"],["101"],["102"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["105"],["101"],["102"],"'dispatch' is assigned a value but never used.","'state' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [state, url]",{"range":"112","text":"113"},"Update the dependencies array to be: [uploadPic, url]",{"range":"114","text":"115"},"Update the dependencies array to be: [id]",{"range":"116","text":"117"},[617,622],"[state, url]",[483,488],"[uploadPic, url]",[690,692],"[id]"]